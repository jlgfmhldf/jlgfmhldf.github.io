* {
  margin: 0;
  padding: 0;
  font: inherit;
  box-sizing: border-box;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-focus-ring-color: rgba(255,255,255,0);
  cursor: default;
}
body {
  font-size: 100%;
  line-height: 1;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
a {
  background: transparent;
}
*:focus,
*:active,
*:hover {
  outline: none;
}
hr {
  box-sizing: content-box;
  height: 0;
}
ol,
ul {
  list-style: none;
}
pre {
  -moz-tab-size: 4;
       tab-size: 4;
  white-space: pre-wrap;
}
q {
  quotes: '\201C' '\201D' '\2018' '\2019';
}
img {
  border: none;
}
svg:not(:root) {
  overflow: hidden;
}
button,
input {
  line-height: normal;
}
button,
select {
  text-transform: none;
}
button {
  overflow: visible;
}
button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
input[type='checkbox'],
input[type='radio'] {
  box-sizing: border-box;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto;
}
input[type='search'] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: none;
  padding: 0;
}
textarea {
  overflow: auto;
  vertical-align: top;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
input,
select,
textarea {
  border-radius: 0;
  box-shadow: none;
}
input,
textarea {
  resize: none;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
}
[placeholder]:focus::-webkit-input-placeholder {
  color: transparent;
}
[placeholder]:focus::-moz-placeholder {
  color: transparent;
}
[placeholder]:focus:-ms-input-placeholder {
  color: transparent;
}
[placeholder]:focus::placeholder {
  color: transparent;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
.about {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
}
@media only screen and (max-width: 1000px) {
  .about {
    padding-left: 4%;
    padding-right: 4%;
  }
}
.about__title {
  margin-top: 3rem;
  margin-bottom: 3rem;
}
.about__list {
  text-align: center;
  margin-bottom: 2rem;
}
.about__list-item {
  font-size: 1.1rem;
  line-height: 1.5;
}
.about__content {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 50%;
}
@media only screen and (max-width: 1000px) {
  .about__content {
    width: 100%;
  }
}
.about__text {
  font-size: 1.2rem;
  line-height: 1.5;
  margin: 1rem 0;
}
.blurred-image {
  overflow: hidden;
  width: 100%;
  height: 100%;
}
.blurred-image__img {
  display: block;
  width: 100%;
  height: 100%;
  background-size: contain;
  will-change: filter;
}
.chip {
  display: block;
  padding-right: 0.8rem;
  padding-left: 0.8rem;
  border-radius: 20px;
  color: #757575;
  box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12);
  cursor: pointer;
  transition: 0.2s ease-out;
  font-size: 0.875rem;
  line-height: 2.2;
  background: #e0e0e0;
  text-decoration: none;
}
.chip:hover {
  box-shadow: 0 5px 11px 0 rgba(0,0,0,0.18), 0 4px 15px 0 rgba(0,0,0,0.15);
}
.chip_active {
  background: #483d8b;
  color: #fff;
}
.myworks {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column;
  min-height: 100vh;
}
@media only screen and (max-width: 1000px) {
  .myworks {
    padding-left: 4%;
    padding-right: 4%;
  }
}
.myworks__title {
  color: #263238;
  text-transform: uppercase;
  font-size: 2.5rem;
  letter-spacing: 0.03em;
  font-weight: 500;
  line-height: 1;
  text-align: center;
  margin-top: 3rem;
  margin-bottom: 3rem;
}
.myworks__projects {
  -moz-column-count: 3;
       column-count: 3;
  width: 90%;
}
@media only screen and (max-width: 1000px) {
  .myworks__projects {
    width: 100%;
    margin-left: -0.5rem;
    margin-right: -0.5rem;
  }
}
.myworks__project {
  display: inline-block;
  margin: 1%;
  width: 31.333%;
}
@media only screen and (max-width: 1000px) {
  .myworks__project {
    width: 48%;
  }
}
@media only screen and (max-width: 600px) {
  .myworks__project {
    width: 98%;
  }
}
.myworks__content {
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  padding-left: 5%;
  padding-right: 5%;
}
@media only screen and (max-width: 1000px) {
  .myworks__content {
    -ms-flex-direction: column;
        flex-direction: column;
    padding-left: 0;
    padding-right: 0;
    display: block;
  }
}
.myworks__filter-section {
  width: 15%;
}
@media only screen and (max-width: 1000px) {
  .myworks__filter-section {
    width: 100%;
    margin-bottom: 2rem;
  }
}
.myworks__clear-filters {
  display: inline-block;
  padding: 0.5rem 0.8rem;
  background: #ff5252;
  color: #fff;
  cursor: pointer;
  text-decoration: none;
  font-size: 0.9rem;
  line-height: 1.5;
  border-radius: 3px;
  text-transform: uppercase;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.2), 0 1px 5px 0 rgba(0,0,0,0.12);
}
.page {
  font-size: 16px;
}
.page_mobile {
  font-size: 12px;
}
.project {
  display: block;
  border-radius: 0.2rem;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.2), 0 1px 5px 0 rgba(0,0,0,0.12);
}
.project_theme_dark .project__title {
  color: #fff;
}
.project_theme_dark .project__description {
  color: #e0e0e0;
}
.project_theme_dark .project__link {
  color: #cfd8dc;
}
.project__title {
  font-family: Roboto, Helvetica, Arial, sans-serif;
  font-size: 1.8rem;
  margin-bottom: 0.5rem;
}
.project__description {
  font-size: 1rem;
  color: #757575;
  margin-bottom: 0.5rem;
  line-height: 1.4;
}
.project__content {
  padding: 1rem;
}
.project__link {
  margin-right: 1rem;
  display: inline-block;
  color: #ff5252;
  font-size: 1.1rem;
  text-transform: uppercase;
  text-decoration: none;
  margin-top: 1rem;
}
.project__img {
  width: 100%;
}
.start {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  height: 100vh;
  min-height: 100vh;
  background-color: #5c5984;
}
@media only screen and (min-width: 400px) and (max-width: 1050px) and (orientation: landscape) {
  .start {
    height: auto;
    min-height: auto;
  }
}
.start__bg {
  position: absolute;
  display: -ms-flexbox;
  display: flex;
}
.start__bg::before {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  content: '';
  background-color: rgba(0,0,0,0.45);
  z-index: 100;
}
.start__content {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 100%;
  height: 100%;
  z-index: 100;
}
.start__title {
  margin-top: 3rem;
  margin-bottom: 3rem;
  color: #fff;
  text-transform: uppercase;
  font-size: 4rem;
  letter-spacing: 0.03em;
  font-weight: 500;
  line-height: 1;
  text-align: center;
}
.start__description {
  font-weight: 300;
  font-size: 1.75rem;
  color: #e0e0e0;
  line-height: 1.3;
  text-align: center;
  margin-top: 0.5em;
  padding: 0 15%;
}
.start__skills {
  display: -ms-flexbox;
  display: flex;
  margin-top: 52px;
}
.start__skill {
  margin-right: 5px;
}
.start__skill:last-child {
  margin-right: 0;
}
.start__link {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  margin-right: 2rem;
  text-decoration: none;
  transition: 0.5s ease;
  color: #fff;
  fill: currentColor;
}
.start__link_github:hover {
  color: #af07af;
}
.start__link_skype:hover {
  color: #12a5f4;
}
.start__link_email:hover {
  color: #e04c40;
}
.start__link-text {
  margin-left: 0.5rem;
  color: inherit;
  font-size: 1.3rem;
}
.start__links {
  display: -ms-flexbox;
  display: flex;
  margin: 6rem 0;
}
.start__mouse {
  position: absolute;
  bottom: 2rem;
  animation: mouse 3s ease infinite;
}
.start__icon {
  width: 1.2rem;
  height: 1.2rem;
}
.start__icon_github {
  transform: translateY(-1px);
}
.start__icon_skype {
  transform: translateY(-1px);
}
.start__icon_mouse {
  width: 2.5rem;
  height: 2.5rem;
  fill: #fff;
}
@keyframes mouse {
  50% {
    transform: translateY(1rem);
  }
  100% {
    transform: translateY(0);
  }
}
.taglist {
  display: block;
}
.taglist__tag-link {
  margin: 0.3rem;
  display: inline-block;
  text-decoration: none;
}
@media only screen and (max-width: 1000px) {
  .taglist__tags {
    display: -ms-flexbox;
    display: flex;
  }
}
.taglist__item {
  margin: 1rem 0;
}
.taglist__title {
  font-size: 1.2rem;
  line-height: 2;
}
.taglist__tags-item {
  display: inline-block;
}
.title {
  display: block;
  color: #263238;
  text-transform: uppercase;
  letter-spacing: 0.03em;
  line-height: 1;
  text-align: center;
  font-weight: 500;
  font-size: 2.5rem;
}
html {
  font-size: 16px;
  transition: 0.5s ease;
}
@media only screen and (min-width: 400px) and (max-width: 1050px) {
  html {
    font-size: 14px;
  }
}
@media only screen and (max-width: 450px) {
  html {
    font-size: 13px;
  }
}
@media only screen and (min-width: 400px) and (max-width: 1050px) and (orientation: landscape) {
  html {
    font-size: 12px;
  }
}
@media only screen and (max-width: 400px) {
  html {
    font-size: 12px;
  }
}
@media only screen and (max-width: 350px) {
  html {
    font-size: 11px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
